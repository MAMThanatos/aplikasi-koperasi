/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package views.admin.internalframes;

import controllers.PinjamanController;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import views.customComponents.TableActionCellEditor;
import views.customComponents.TableActionCellRender;
import views.customComponents.TableActionEvent;
import models.PinjamanModel;
import models.AngsuranModel;
import controllers.AngsuranController;

/**
 *
 * @author wtf
 */
public class PinjamanView extends javax.swing.JInternalFrame {

    /**
     * Creates new form PinjamanView
     */
    public PinjamanView() {
        initComponents();
        loadPinjaman();
        renderPanelAction();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nasabah", "Nominal", "Alasan", "Tenor", "Tanggal", "Status", "Aksi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(40);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
// </editor-fold>                        

    private void loadPinjaman() {
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 7;
            }         
        };
        
        model.addColumn("ID");
        model.addColumn("Nasabah");
        model.addColumn("Nominal");
        model.addColumn("Alasan");
        model.addColumn("Tenor (Bulan)");
        model.addColumn("Tanggal Pengajuan");
        model.addColumn("Status");
        model.addColumn("Aksi");
       
        List<PinjamanModel> pinjamanList = PinjamanController.getAllPinjaman();
        
        for (PinjamanModel pinjaman : pinjamanList) {
            Object[] rowData = new Object[8];
            rowData[0] = pinjaman.getId();
            rowData[1] = pinjaman.getNamaNasabah();
            rowData[2] = pinjaman.getNominalPinjaman();
            rowData[3] = pinjaman.getKeterangan();
            rowData[4] = pinjaman.getTenor();
            rowData[5] = pinjaman.getTanggalPengajuan();
            rowData[6] = pinjaman.getStatus();

            model.addRow(rowData);
        }
        
        jTable1.setModel(model);
    }
       
    private void renderPanelAction() {
        TableActionEvent ev = new TableActionEvent() {
            @Override
            public void onAccept(int row) {
                String idStr = jTable1.getValueAt(row, 0).toString();
                int IdPinjaman = Integer.parseInt(idStr);
                
                boolean success = PinjamanController.setujuiPinjaman(IdPinjaman);
                
                if(!success) {
                    JOptionPane.showMessageDialog(PinjamanView.this, "Gagal Mengubah Status!");
                }
                
                loadPinjaman();
                renderPanelAction();
            }

            @Override
            public void onRefuse(int row) {
                String idStr = jTable1.getValueAt(row, 0).toString();
                int IdPinjaman = Integer.parseInt(idStr);
                
                boolean success = PinjamanController.tolakPinjaman(IdPinjaman);
                
                if(!success) {
                    JOptionPane.showMessageDialog(PinjamanView.this, "Gagal Mengubah Status!");
                }
                
                loadPinjaman();
                renderPanelAction();
            }

            @Override
            public void onDetail(int row) {
                String id = jTable1.getValueAt(row, 0).toString();
                String nasabah = jTable1.getValueAt(row, 1).toString();
                String nominal = jTable1.getValueAt(row, 2).toString();
                String alasan = jTable1.getValueAt(row, 3).toString();
                String tenor = jTable1.getValueAt(row, 4).toString();
                String tanggal = jTable1.getValueAt(row, 5).toString();
                String status = jTable1.getValueAt(row, 6).toString();

                String detail = String.format(
                    "ID: %s\nNasabah: %s\nNominal: %s\nTenor: %s bulan\nTanggal Pengajuan: %s\nStatus: %s\n\nKeterangan:\n%s",
                    id, nasabah, nominal, tenor, tanggal, status, alasan
                );

                JTextArea textArea = new JTextArea(detail);
                textArea.setWrapStyleWord(true);
                textArea.setLineWrap(true);
                textArea.setEditable(false);
                textArea.setCaretPosition(0);
                JScrollPane detailScroll = new JScrollPane(textArea);
                
                javax.swing.JPanel panel = new javax.swing.JPanel();
                panel.setLayout(new javax.swing.BoxLayout(panel, javax.swing.BoxLayout.Y_AXIS));
                panel.add(detailScroll);

                // Hanya tampilkan tabel angsuran jika status == DISETUJUI
                if (status.equalsIgnoreCase("DISETUJUI")) {
                    detailScroll.setPreferredSize(new java.awt.Dimension(580, 150));
                    
                    JTable table = new JTable();
                    DefaultTableModel model = new DefaultTableModel(
                        new Object[]{"ID", "Angsuran Ke", "Tagihan", "Tanggal Pembayaran", "Status"}, 0
                    );

                    List<AngsuranModel> angsuranList = AngsuranController.getAllAngsuranByIdPinjaman(Integer.parseInt(id));
                    for (AngsuranModel angsuran : angsuranList) {
                        model.addRow(new Object[]{
                            angsuran.getId(),
                            angsuran.getAngsuranke(),
                            angsuran.getNominalAngsuran(),
                            angsuran.getTanggalPembayaran()!= null ? angsuran.getTanggalPembayaran().toString() : "-",
                            angsuran.getStatus()
                        });
                    }

                    table.setModel(model);
                    table.setEnabled(false);
                    JScrollPane tableScroll = new JScrollPane(table);
                    tableScroll.setPreferredSize(new java.awt.Dimension(580, 200));

                    panel.add(javax.swing.Box.createVerticalStrut(10)); // jarak antar komponen
                    panel.add(tableScroll);
                } else {
                    detailScroll.setPreferredSize(new java.awt.Dimension(580, 300));

                }

                // Tampilkan dialog
                JOptionPane.showOptionDialog(
                    PinjamanView.this,
                    panel,
                    "Detail Pinjaman",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE,
                    null,
                    new Object[]{"tutup"},
                    "tutup"
                );
            }
        };
                
        jTable1.getColumnModel().getColumn(7).setCellRenderer(new TableActionCellRender());
        jTable1.getColumnModel().getColumn(7).setCellEditor(new TableActionCellEditor(ev));
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(80);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
